// Generated by jextract

package org.eclipse.swt.opengl.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
public interface PFNGLTANGENT3BEXTPROC {

    void apply(byte x0, byte x1, byte x2);
    static MemoryAddress allocate(PFNGLTANGENT3BEXTPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLTANGENT3BEXTPROC.class, fi, constants$525.PFNGLTANGENT3BEXTPROC$FUNC, "(BBB)V");
    }
    static MemoryAddress allocate(PFNGLTANGENT3BEXTPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLTANGENT3BEXTPROC.class, fi, constants$525.PFNGLTANGENT3BEXTPROC$FUNC, "(BBB)V", scope);
    }
    static PFNGLTANGENT3BEXTPROC ofAddress(MemoryAddress addr) {
        return (byte x0, byte x1, byte x2) -> {
            try {
                constants$525.PFNGLTANGENT3BEXTPROC$MH.invokeExact((Addressable)addr, x0, x1, x2);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


