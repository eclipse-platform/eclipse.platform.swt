// Generated by jextract

package org.eclipse.swt.opengl.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$2 {

    static final FunctionDescriptor glLineStipple$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_SHORT
    );
    static final MethodHandle glLineStipple$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glLineStipple",
        "(IS)V",
        constants$2.glLineStipple$FUNC, false
    );
    static final FunctionDescriptor glPolygonMode$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT
    );
    static final MethodHandle glPolygonMode$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glPolygonMode",
        "(II)V",
        constants$2.glPolygonMode$FUNC, false
    );
    static final FunctionDescriptor glPolygonOffset$FUNC = FunctionDescriptor.ofVoid(
        C_FLOAT,
        C_FLOAT
    );
    static final MethodHandle glPolygonOffset$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glPolygonOffset",
        "(FF)V",
        constants$2.glPolygonOffset$FUNC, false
    );
    static final FunctionDescriptor glPolygonStipple$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle glPolygonStipple$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glPolygonStipple",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$2.glPolygonStipple$FUNC, false
    );
    static final FunctionDescriptor glGetPolygonStipple$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle glGetPolygonStipple$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glGetPolygonStipple",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$2.glGetPolygonStipple$FUNC, false
    );
    static final FunctionDescriptor glEdgeFlag$FUNC = FunctionDescriptor.ofVoid(
        C_CHAR
    );
    static final MethodHandle glEdgeFlag$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "glEdgeFlag",
        "(B)V",
        constants$2.glEdgeFlag$FUNC, false
    );
}


