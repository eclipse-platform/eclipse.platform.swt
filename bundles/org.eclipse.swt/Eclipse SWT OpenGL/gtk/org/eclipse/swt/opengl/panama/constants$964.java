// Generated by jextract

package org.eclipse.swt.opengl.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$964 {

    static final FunctionDescriptor random_r$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle random_r$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "random_r",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$964.random_r$FUNC, false
    );
    static final FunctionDescriptor srandom_r$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle srandom_r$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "srandom_r",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$964.srandom_r$FUNC, false
    );
    static final FunctionDescriptor initstate_r$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle initstate_r$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "initstate_r",
        "(ILjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        constants$964.initstate_r$FUNC, false
    );
    static final FunctionDescriptor setstate_r$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle setstate_r$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "setstate_r",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$964.setstate_r$FUNC, false
    );
    static final FunctionDescriptor rand$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle rand$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "rand",
        "()I",
        constants$964.rand$FUNC, false
    );
    static final FunctionDescriptor srand$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle srand$MH = RuntimeHelper.downcallHandle(
        glut_h.LIBRARIES, "srand",
        "(I)V",
        constants$964.srand$FUNC, false
    );
}


