// Generated by jextract

package org.eclipse.swt.opengl.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
public interface PFNGLUNIFORM3UIPROC {

    void apply(int x0, int x1, int x2, int x3);
    static MemoryAddress allocate(PFNGLUNIFORM3UIPROC fi) {
        return RuntimeHelper.upcallStub(PFNGLUNIFORM3UIPROC.class, fi, constants$160.PFNGLUNIFORM3UIPROC$FUNC, "(IIII)V");
    }
    static MemoryAddress allocate(PFNGLUNIFORM3UIPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(PFNGLUNIFORM3UIPROC.class, fi, constants$160.PFNGLUNIFORM3UIPROC$FUNC, "(IIII)V", scope);
    }
    static PFNGLUNIFORM3UIPROC ofAddress(MemoryAddress addr) {
        return (int x0, int x1, int x2, int x3) -> {
            try {
                constants$160.PFNGLUNIFORM3UIPROC$MH.invokeExact((Addressable)addr, x0, x1, x2, x3);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


