<?xml version="1.0" encoding="UTF-8"?>
<!-- 
###############################################################################
# Copyright (c) 2024, 2024 Hannes Wellmann and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     Hannes Wellmann - initial API and implementation
###############################################################################
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>eclipse.platform.swt</groupId>
		<artifactId>eclipse.platform.swt</artifactId>
		<version>4.34.0-SNAPSHOT</version>
	</parent>

	<groupId>org.eclipse.swt</groupId>
	<artifactId>eclipse.platform.swt.binaries</artifactId>
	<packaging>pom</packaging>

	<properties>
		<buildid>${buildId}</buildid>
		<maven.compiler.release>17</maven.compiler.release>
		<swtMainProject>${project.basedir}/../../bundles/org.eclipse.swt</swtMainProject>
	</properties>

	<modules>
		<module>org.eclipse.swt.cocoa.macosx.x86_64</module>
		<module>org.eclipse.swt.cocoa.macosx.aarch64</module>
		<module>org.eclipse.swt.gtk.linux.aarch64</module>
		<module>org.eclipse.swt.gtk.linux.ppc64le</module>
		<module>org.eclipse.swt.gtk.linux.x86_64</module>
		<module>org.eclipse.swt.win32.win32.aarch64</module>
		<module>org.eclipse.swt.win32.win32.x86_64</module>
	</modules>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit-platform</artifactId>
						<version>3.2.5</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>execute-tests</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-apitools-plugin</artifactId>
				<version>${tycho.version}</version>
				<configuration>
					<addSourceFolders>true</addSourceFolders>
					<failOnWarning>true</failOnWarning>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-packaging-plugin</artifactId>
				<configuration>
					<timestampProvider>fragment-host</timestampProvider>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>build-native-fragment</id>
			<activation>
				<file><!-- Only build the native fragment projects in this directory -->
					<exists>META-INF/MANIFEST.MF</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>target-platform-configuration</artifactId>
						<configuration>
							<executionEnvironment>JavaSE-${maven.compiler.release}</executionEnvironment>
							<dependency-resolution>
								<profileProperties>
									<!-- set property so that the filter condition on the p2 dependencies from org.eclipse.swt to the fragments does not match -->
									<org.eclipse.swt.buildtime>true</org.eclipse.swt.buildtime>
								</profileProperties>
							</dependency-resolution>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>build-native-binaries</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<!-- See https://stackoverflow.com/a/53227117 and http://ant-contrib.sourceforge.net/tasks/tasks/index.html -->
										<taskdef resource="net/sf/antcontrib/antlib.xml"/>
										<if><equals arg1="${native}" arg2="${ws}.${os}.${arch}"/>
											<then>
												<property name="build_dir" value="${project.build.directory}/natives-build-temp"/>
												<exec executable="${java.home}/bin/java" dir="${swtMainProject}" failonerror="true">
													<arg line="-Dws=${ws} -Darch=${arch} build-scripts/CollectSources.java -nativeSources '${build_dir}'"/>
												</exec>
												<property name="SWT_JAVA_HOME" value="${java.home}"/><!-- Not overwritten if already set, e.g. as CLI argument -->
												<echo>Compile SWT natives against headers and libraries from JDK: ${SWT_JAVA_HOME}</echo>
												<if><equals arg1="${ws}" arg2="win32" />
													<then>
														<exec dir="${build_dir}" executable="${build_dir}/build.bat" failonerror="true">
															<env key="SWT_JAVA_HOME" value="${SWT_JAVA_HOME}"/>
															<env key="OUTPUT_DIR" value="${project.basedir}"/>
															<arg line="install clean"/>
														</exec>
													</then>
													<else>
														<property name="gtk_version" value="3.0" />
														<exec dir="${build_dir}" executable="sh" failonerror="true">
															<arg line="build.sh"/>
															<env key="SWT_JAVA_HOME" value="${SWT_JAVA_HOME}"/>
															<env key="OUTPUT_DIR" value="${project.basedir}"/>
															<env key="GTK_VERSION" value="${gtk_version}"/>
															<env key="MODEL" value="${arch}"/>
															<arg line="install clean"/>
														</exec>
													</else>
												</if>
											</then>
										</if>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>package-swt-download-zip</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<property name="temp.folder" value="${project.build.directory}/swtdownload-temp" />
										<mkdir dir="${temp.folder}/swtdownload/" />
										<!-- Prepare translationfiles for inclusion -->
										<copy todir="${temp.folder}/@dot.src" failonerror="true" overwrite="true">
											<fileset dir="${swtMainProject}/Eclipse SWT/common/" includes="**/*._properties"/>
											<mapper type="glob" from="*._properties" to="*.properties" />
										</copy>
										<!-- Prepare nested swt.jar and src.jar -->
										<property name="mavenBuiltJarName" value="${project.build.directory}/org.eclipse.swt.${ws}.${os}.${arch}-${project.version}" />
										<copy file="${mavenBuiltJarName}.jar" tofile="${temp.folder}/swtdownload/swt.jar"/>
										<jar jarfile="${temp.folder}/swtdownload/swt.jar" update="true" basedir="${temp.folder}/@dot.src">
											<manifest>
												<attribute name="Eclipse-Version" value="${releaseNumberSDK}"/>
											</manifest>
										</jar>
										<zip zipfile="${temp.folder}/swtdownload/src.zip" duplicate="preserve">
											<zipfileset src="${mavenBuiltJarName}-sources.jar" includes="**/*.sh" filemode="755"/>
											<zipfileset src="${mavenBuiltJarName}-sources.jar" excludes="META-INF/**,OSGI-INF/**" />
											<fileset dir="${temp.folder}/@dot.src"/>
										</zip>
										<!--Assemple nested SWT-zip -->
										<zip zipfile="${project.build.directory}/swt-${buildid}-${ws}-${os}-${arch}.zip">
											<fileset dir="${temp.folder}/swtdownload/" />
											<fileset dir="${swtMainProject}/build/" />
											<fileset dir="." includes="about.html,about_files/" />
										</zip>
									</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant</artifactId>
								<version>1.10.14</version>
							</dependency>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>1.0b3</version>
								<exclusions>
									<exclusion>
										<groupId>ant</groupId>
										<artifactId>ant</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
